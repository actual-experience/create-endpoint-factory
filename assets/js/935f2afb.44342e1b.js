"use strict";(self.webpackChunkcef_website=self.webpackChunkcef_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Getting Started","href":"/create-endpoint-factory/","docId":"getting-started"},{"type":"link","label":"Motivation","href":"/create-endpoint-factory/motivation","docId":"motivation"},{"type":"category","label":"Concepts","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Factory","href":"/create-endpoint-factory/concepts/factory","docId":"concepts/factory"},{"type":"link","label":"Endpoint","href":"/create-endpoint-factory/concepts/endpoint","docId":"concepts/endpoint"},{"type":"link","label":"Method","href":"/create-endpoint-factory/concepts/method","docId":"concepts/method"}],"href":"/create-endpoint-factory/category/concepts"},{"type":"link","label":"Exports","href":"/create-endpoint-factory/exports","docId":"exports"}]},"docs":{"concepts/endpoint":{"id":"concepts/endpoint","title":"Endpoint","description":"A description of an individual API route.","sidebar":"docsSidebar"},"concepts/factory":{"id":"concepts/factory","title":"Factory","description":"The function used to create endpoints.","sidebar":"docsSidebar"},"concepts/method":{"id":"concepts/method","title":"Method","description":"A description of a method for an API route.","sidebar":"docsSidebar"},"exports":{"id":"exports","title":"Exports","description":"createEndpointFactory","sidebar":"docsSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"Introduction","sidebar":"docsSidebar"},"motivation":{"id":"motivation","title":"Motivation","description":"NextJS provides no \u201cofficial\u201d way to handle requests on a method basis (though there are ideas in beta). The response can only be typed as a combination of all the possible return values, meaning it\u2019s much easier to accidentally write unreliable code and return an unintended result for a request (as there is no way to prevent accidentally returning the response for a GET in a POST request, for example).","sidebar":"docsSidebar"}}}')}}]);