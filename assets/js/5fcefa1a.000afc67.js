"use strict";(self.webpackChunkcef_website=self.webpackChunkcef_website||[]).push([[807],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(7462),a=n(7294),o=n(6010),i=n(2389),s=n(7392),l=n(7094),c=n(2466);const p="tabList__CuJ",d="tabItem_LNqP";function u(e){const{lazy:t,block:n,defaultValue:i,values:u,groupId:m,className:h}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,s.l)(g,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===i?i:i??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:x}=(0,l.U)(),[E,v]=(0,a.useState)(b),T=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==E&&g.some((t=>t.value===e))&&v(e)}const w=e=>{const t=e.currentTarget,n=T.indexOf(t),r=g[n].value;r!==E&&(N(t),v(r),null!=m&&x(m,String(r)))},C=e=>{let t=null;switch(e.key){case"Enter":w(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},h)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>T.push(e),onKeyDown:C,onClick:w},i,{className:(0,o.Z)("tabs__item",d,i?.className,{"tabs__item--active":E===t})}),n??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function m(e){const t=(0,i.Z)();return a.createElement(u,(0,r.Z)({key:String(t)},e))}},6033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=n(7462),a=(n(7294),n(3905)),o=n(5162),i=n(5488);const s={sidebar_position:1,description:"The function used to create endpoints.",toc_max_heading_level:4},l="Factory",c={unversionedId:"concepts/factory",id:"concepts/factory",title:"Factory",description:"The function used to create endpoints.",source:"@site/docs/concepts/factory.mdx",sourceDirName:"concepts",slug:"/concepts/factory",permalink:"/create-endpoint-factory/concepts/factory",draft:!1,editUrl:"https://github.com/actual-experience/create-endpoint-factory/tree/main/website/docs/concepts/factory.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"The function used to create endpoints.",toc_max_heading_level:4},sidebar:"docsSidebar",previous:{title:"Concepts",permalink:"/create-endpoint-factory/category/concepts"},next:{title:"Endpoint",permalink:"/create-endpoint-factory/concepts/endpoint"}},p={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Error serialisation",id:"error-serialisation",level:3},{value:"Errors with HTTP codes",id:"errors-with-http-codes",level:4},{value:"Authentication",id:"authentication",level:3},{value:"Disabling authentication for an endpoint",id:"disabling-authentication-for-an-endpoint",level:4},{value:"Extra information",id:"extra-information",level:3},{value:"Configuration per handler",id:"configuration-per-handler",level:4}],u={toc:d};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"factory"},"Factory"),(0,a.kt)("p",null,"An endpoint factory is the pre-configured function used to create each ",(0,a.kt)("a",{parentName:"p",href:"./endpoint"},"endpoint"),". It is returned from ",(0,a.kt)("inlineCode",{parentName:"p"},"createEndpointFactory"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpoint = createEndpointFactory();\n")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The factory can be configured for settings that should apply to all endpoints created with it."),(0,a.kt)("h3",{id:"error-serialisation"},"Error serialisation"),(0,a.kt)("p",null,"By default, thrown (uncaught) errors will be serialised using ",(0,a.kt)("a",{parentName:"p",href:"/exports#miniserializeerror"},(0,a.kt)("inlineCode",{parentName:"a"},"miniSerializeError")),", before being sent via ",(0,a.kt)("inlineCode",{parentName:"p"},"res.json()"),"."),(0,a.kt)("p",null,"However, you may want to customise the serialisation of errors before they're sent. This is possible using the ",(0,a.kt)("inlineCode",{parentName:"p"},"serializeError")," option when calling ",(0,a.kt)("inlineCode",{parentName:"p"},"createEndpointFactory"),", and will affect all endpoints created with the factory returned."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"import {\n  createEndpointFactory,\n  miniSerializeError,\n} from 'next-create-endpoint-factory';\n\nexport class MyCustomError extends Error {\n  isCustom = true;\n}\n\nexport const createEndpoint = createEndpointFactory({\n  serializeError: (err) => {\n    if (err instanceof MyCustomError) {\n      return { customError: true, ...miniSerializeError(err) };\n    }\n    return miniSerializeError(err);\n  },\n});\n")),(0,a.kt)("h4",{id:"errors-with-http-codes"},"Errors with HTTP codes"),(0,a.kt)("p",null,"Errors thrown with ",(0,a.kt)("inlineCode",{parentName:"p"},"failWithCode")," will be instances of the ",(0,a.kt)("a",{parentName:"p",href:"/exports#reserror"},(0,a.kt)("inlineCode",{parentName:"a"},"ResError"))," subclass, which is exported from CEF."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ResError")," (and by extension, ",(0,a.kt)("inlineCode",{parentName:"p"},"failWithCode"),") accepts a third parameter, ",(0,a.kt)("inlineCode",{parentName:"p"},"meta"),", which is exposed as a public field. This can be used in a custom serialisation function",(0,a.kt)("span",{className:"ts-only"},", though will always be typed as ",(0,a.kt)("inlineCode",{parentName:"p"},"unknown")),"."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  createEndpointFactory,\n  ResError,\n  miniSerializeError,\n} from 'next-create-endpoint-factory';\n\nconst isToastable = (\n  meta: unknown\n): meta is { isToastable: true; toastMsg: string } =>\n  typeof meta === 'object' && !!meta && 'isToastable' in meta;\n\nexport const createEndpoint = createEndpointFactory({\n  serializeError: (err: unknown) => {\n    if (err instanceof ResError) {\n      return {\n        ...miniSerializeError(err),\n        ...(isToastable(err.meta) && {\n          isToastable: true,\n          toastMsg: err.meta.toastMsg,\n        }),\n      };\n    }\n    return miniSerializeError(err);\n  },\n});\n\nexport const endpoint = createEndpoint({\n  methods: (method) => ({\n    get: method({\n      handler: (data, { failWithCode }) => {\n        throw failWithCode(404, 'this message is internal', {\n          isToastable: true,\n          toastMsg: 'This message is toastable!',\n        });\n      },\n    }),\n  }),\n});\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  createEndpointFactory,\n  ResError,\n  miniSerializeError,\n} from 'next-create-endpoint-factory';\n\nconst isToastable = (meta) =>\n  typeof meta === 'object' && !!meta && 'isToastable' in meta;\n\nexport const createEndpoint = createEndpointFactory({\n  serializeError: (err) => {\n    if (err instanceof ResError) {\n      return {\n        ...miniSerializeError(err),\n        ...(isToastable(err.meta) && {\n          isToastable: true,\n          toastMsg: err.meta.toastMsg,\n        }),\n      };\n    }\n    return miniSerializeError(err);\n  },\n});\n\nexport const endpoint = createEndpoint({\n  methods: (method) => ({\n    get: method({\n      handler: (data, { failWithCode }) => {\n        throw failWithCode(404, 'this message is internal', {\n          isToastable: true,\n          toastMsg: 'This message is toastable!',\n        });\n      },\n    }),\n  }),\n});\n")))),(0,a.kt)("p",null,"Alternatively, you can create your own subclass of ResError."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Custom error example" collapsible',title:'"Custom',error:!0,'example"':!0,collapsible:!0},"import {\n  createEndpointFactory,\n  ResError,\n  miniSerializeError,\n} from 'next-create-endpoint-factory';\n\nexport class ToastableError extends ResError {\n  isToastable = true;\n  constructor(code: number, errorMsg: string, public toastMsg: string) {\n    super(code, errorMsg);\n  }\n}\n\nexport const createEndpoint = createEndpointFactory({\n  serializeError: (err) => {\n    if (err instanceof ToastableError) {\n      return {\n        ...miniSerializeError(err),\n        toastMsg: err.toastMsg,\n        isToastable: true,\n      };\n    }\n    return miniSerializeError(err);\n  },\n});\n\nexport const endpoint = createEndpoint({\n  methods: (method) => ({\n    get: method({\n      handler: () => {\n        throw new ToastableError(\n          404,\n          'this message is internal',\n          'This message is toastable!'\n        );\n      },\n    }),\n  }),\n});\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Custom error example" collapsible',title:'"Custom',error:!0,'example"':!0,collapsible:!0},"import {\n  createEndpointFactory,\n  ResError,\n  miniSerializeError,\n} from 'next-create-endpoint-factory';\n\nexport class ToastableError extends ResError {\n  toastMsg;\n  isToastable = true;\n  constructor(code, errorMsg, toastMsg) {\n    super(code, errorMsg);\n    this.toastMsg = toastMsg;\n  }\n}\n\nexport const createEndpoint = createEndpointFactory({\n  serializeError: (err) => {\n    if (err instanceof ToastableError) {\n      return {\n        ...miniSerializeError(err),\n        toastMsg: err.toastMsg,\n        isToastable: true,\n      };\n    }\n    return miniSerializeError(err);\n  },\n});\n\nexport const endpoint = createEndpoint({\n  methods: (method) => ({\n    get: method({\n      handler: () => {\n        throw new ToastableError(\n          404,\n          'this message is internal',\n          'This message is toastable!'\n        );\n      },\n    }),\n  }),\n});\n")))),(0,a.kt)("h3",{id:"authentication"},"Authentication"),(0,a.kt)("p",null,"It's a common use case to authenticate a request before processing it. This is done in CEF by providing an ",(0,a.kt)("inlineCode",{parentName:"p"},"authenticate")," callback, which receives the current ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," and checks it before running the final handler."),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"authenticate")," callback returns any data, it's provided to the method's handler as ",(0,a.kt)("inlineCode",{parentName:"p"},"authentication")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"handlerApi")," object."),(0,a.kt)("p",null,"The callback receives ",(0,a.kt)("inlineCode",{parentName:"p"},"failWithCode")," as its second argument, enabling it to throw any relevant ",(0,a.kt)("a",{parentName:"p",href:"./method#custom-codes"},"errors with an HTTP code"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"no-transpile","no-transpile":!0},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithAuth = createEndpointFactory({\n  authenticate: (req, failWithCode) => {\n    if (!req.headers.Authentication) {\n      throw failWithCode(401, 'Unauthorized request');\n    }\n    return req.headers.Authentication;\n  },\n});\n\nexport const endpoint = createEndpointWithAuth({\n  methods: (method) => ({\n    get: method({\n      handler: ({ authentication }) => {\n        console.log(authentication); // same as req.headers.Authentication\n      },\n    }),\n  }),\n});\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Some libraries prefer to do this with ",(0,a.kt)("a",{parentName:"p",href:"./endpoint#handler-decoration"},"decorators")," instead.\nThere's currently no supported way to decorate all endpoints from a factory, so this would need to be done per endpoint.")),(0,a.kt)("h4",{id:"disabling-authentication-for-an-endpoint"},"Disabling authentication for an endpoint"),(0,a.kt)("p",null,"If an individual ",(0,a.kt)("a",{parentName:"p",href:"./endpoint"},"endpoint")," should skip the authentication step, you can set the ",(0,a.kt)("inlineCode",{parentName:"p"},"disableAuthentication")," key when creating it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'no-transpile title="Endpoint with disabled authentication"',"no-transpile":!0,title:'"Endpoint',with:!0,disabled:!0,'authentication"':!0},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithAuth = createEndpointFactory({\n  authenticate: (req, failWithCode) => {\n    if (!req.headers.Authentication) {\n      throw failWithCode(401, 'Unauthorized request');\n    }\n    return req.headers.Authentication;\n  },\n});\n\nexport const endpoint = createEndpointWithAuth({\n  methods: (method) => ({\n    get: method({\n      handler: ({ authentication }) => {\n        console.log(authentication); // undefined\n      },\n    }),\n  }),\n  // highlight-next-line\n  disableAuthentication: true,\n});\n")),(0,a.kt)("h3",{id:"extra-information"},"Extra information"),(0,a.kt)("p",null,"Sometimes it's desired to have additional information available to each handler, that might be derived from the original request. This is possible using the ",(0,a.kt)("inlineCode",{parentName:"p"},"extraApi")," option when calling ",(0,a.kt)("inlineCode",{parentName:"p"},"createEndpointFactory"),"."),(0,a.kt)("p",null,"You can provide a callback that receives the current request (and optionally some ",(0,a.kt)("a",{parentName:"p",href:"#configuration-per-handler"},"configuration"),") and returns a value that will be made available as ",(0,a.kt)("inlineCode",{parentName:"p"},"extra")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"handlerApi")," object."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithExtra = createEndpointFactory({\n  extraApi: (req) => {\n    const extra: { square?: number } = {};\n    if (typeof req.query.num === 'string') {\n      const num = parseInt(req.query.num);\n      extra.square = num ** 2;\n    }\n    return extra;\n  },\n});\n\nexport const endpoint = createEndpointWithExtra({\n  methods: (method) => ({\n    get: method({\n      handler: ({ extra }) => {\n        console.log(extra.square); // number or undefined\n      },\n    }),\n  }),\n});\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithExtra = createEndpointFactory({\n  extraApi: (req) => {\n    const extra = {};\n    if (typeof req.query.num === 'string') {\n      const num = parseInt(req.query.num);\n      extra.square = num ** 2;\n    }\n    return extra;\n  },\n});\n\nexport const endpoint = createEndpointWithExtra({\n  methods: (method) => ({\n    get: method({\n      handler: ({ extra }) => {\n        console.log(extra.square); // number or undefined\n      },\n    }),\n  }),\n});\n")))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You don't have to be deriving anything from the request - you may just want to do some dependency injection, similar to a ",(0,a.kt)("a",{parentName:"p",href:"https://redux.js.org/usage/writing-logic-thunks#injecting-config-values-into-thunks"},"thunk middleware with an extra argument"),"."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Injecting a Sequelize instance" no-transpile',title:'"Injecting',a:!0,Sequelize:!0,'instance"':!0,"no-transpile":!0},"import { createEndpointFactory } from 'next-create-endpoint-factory';\nimport { sequelize } from './sequelize';\n\nexport const createEndpointWithSequelize = createEndpointFactory({\n  // highlight-next-line\n  extraApi: () => ({ sequelize }), // sequelize instance now available as extra.sequelize\n});\n"))),(0,a.kt)("h4",{id:"configuration-per-handler"},"Configuration per handler"),(0,a.kt)("p",null,"It may be useful to provide options to your ",(0,a.kt)("inlineCode",{parentName:"p"},"extraApi")," callback to affect what the final ",(0,a.kt)("inlineCode",{parentName:"p"},"extra")," value will include. This is possible by setting an ",(0,a.kt)("inlineCode",{parentName:"p"},"extraOptions")," option when creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"method")," definition."),(0,a.kt)("p",null,"The options will be passed as the second argument to the ",(0,a.kt)("inlineCode",{parentName:"p"},"extraApi")," callback."),(0,a.kt)(i.Z,{groupId:"language",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithExtra = createEndpointFactory({\n  extraApi: (\n    req,\n    // highlight-next-line\n    { includeSquare = true }: { includeSquare?: boolean } = {}\n  ) => {\n    const extra: { square?: number } = {};\n    if (includeSquare && typeof req.query.num === 'string') {\n      const num = parseInt(req.query.num);\n      extra.square = num ** 2;\n    }\n    return extra;\n  },\n});\n\nexport const endpoint = createEndpointWithExtra({\n  methods: (method) => ({\n    get: method({\n      handler: ({ extra }) => {\n        console.log(extra.square); // number or undefined\n      },\n      // highlight-next-line\n      extraOptions: { includeSquare: true },\n    }),\n  }),\n});\n"))),(0,a.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { createEndpointFactory } from 'next-create-endpoint-factory';\n\nexport const createEndpointWithExtra = createEndpointFactory({\n  extraApi: (\n    req,\n    // highlight-next-line\n    { includeSquare = true } = {}\n  ) => {\n    const extra = {};\n    if (includeSquare && typeof req.query.num === 'string') {\n      const num = parseInt(req.query.num);\n      extra.square = num ** 2;\n    }\n    return extra;\n  },\n});\n\nexport const endpoint = createEndpointWithExtra({\n  methods: (method) => ({\n    get: method({\n      handler: ({ extra }) => {\n        console.log(extra.square); // number or undefined\n      },\n      // highlight-next-line\n      extraOptions: { includeSquare: true },\n    }),\n  }),\n});\n")))),(0,a.kt)("div",{className:"ts-only"},(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"extraOptions")," is optional if the ",(0,a.kt)("inlineCode",{parentName:"p"},"extraApi")," callback's second parameter is optional/potentially undefined.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"There's no way to change ",(0,a.kt)("inlineCode",{parentName:"p"},"extra"),"'s type dynamically - if a property is optionally included, it will still be marked as potentially undefined even if the options guarantee it exists."),(0,a.kt)("p",{parentName:"admonition"},"It's up to you whether to handle this with a standard null check or with type assertions."))))}m.isMDXComponent=!0}}]);